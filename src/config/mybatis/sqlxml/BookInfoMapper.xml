<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BookInfoMapper">
  <resultMap id="BaseResultMap" type="entity.BookInfo">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="pub_date" jdbcType="DATE" property="pubDate" />
    <result column="register_date" jdbcType="DATE" property="registerDate" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="bookrack" jdbcType="VARCHAR" property="bookrack" />
    <result column="total_num" jdbcType="SMALLINT" property="totalNum" />
    <result column="remain_num" jdbcType="SMALLINT" property="remainNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, name, type, author, publisher, pub_date, register_date, price, isbn, bookrack, 
    total_num, remain_num
  </sql>
  <select id="selectByExample" parameterType="entity.BookInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_info
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_info
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.BookInfoExample">
    delete from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.BookInfo">
    insert into book_info (book_id, name, type, 
      author, publisher, pub_date, 
      register_date, price, isbn, 
      bookrack, total_num, remain_num
      )
    values (#{bookId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{author,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{pubDate,jdbcType=DATE}, 
      #{registerDate,jdbcType=DATE}, #{price,jdbcType=DECIMAL}, #{isbn,jdbcType=VARCHAR}, 
      #{bookrack,jdbcType=VARCHAR}, #{totalNum,jdbcType=SMALLINT}, #{remainNum,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.BookInfo">
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="pubDate != null">
        pub_date,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="bookrack != null">
        bookrack,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="remainNum != null">
        remain_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null">
        #{pubDate,jdbcType=DATE},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="bookrack != null">
        #{bookrack,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=SMALLINT},
      </if>
      <if test="remainNum != null">
        #{remainNum,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.BookInfoExample" resultType="java.lang.Long">
    select count(*) from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_info
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.pubDate != null">
        pub_date = #{record.pubDate,jdbcType=DATE},
      </if>
      <if test="record.registerDate != null">
        register_date = #{record.registerDate,jdbcType=DATE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.bookrack != null">
        bookrack = #{record.bookrack,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNum != null">
        total_num = #{record.totalNum,jdbcType=SMALLINT},
      </if>
      <if test="record.remainNum != null">
        remain_num = #{record.remainNum,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_info
    set book_id = #{record.bookId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      pub_date = #{record.pubDate,jdbcType=DATE},
      register_date = #{record.registerDate,jdbcType=DATE},
      price = #{record.price,jdbcType=DECIMAL},
      isbn = #{record.isbn,jdbcType=VARCHAR},
      bookrack = #{record.bookrack,jdbcType=VARCHAR},
      total_num = #{record.totalNum,jdbcType=SMALLINT},
      remain_num = #{record.remainNum,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.BookInfo">
    update book_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null">
        pub_date = #{pubDate,jdbcType=DATE},
      </if>
      <if test="registerDate != null">
        register_date = #{registerDate,jdbcType=DATE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="bookrack != null">
        bookrack = #{bookrack,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=SMALLINT},
      </if>
      <if test="remainNum != null">
        remain_num = #{remainNum,jdbcType=SMALLINT},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.BookInfo">
    update book_info
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      pub_date = #{pubDate,jdbcType=DATE},
      register_date = #{registerDate,jdbcType=DATE},
      price = #{price,jdbcType=DECIMAL},
      isbn = #{isbn,jdbcType=VARCHAR},
      bookrack = #{bookrack,jdbcType=VARCHAR},
      total_num = #{totalNum,jdbcType=SMALLINT},
      remain_num = #{remainNum,jdbcType=SMALLINT}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>